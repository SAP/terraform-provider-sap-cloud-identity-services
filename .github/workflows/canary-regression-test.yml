name: Canary regression Test - Terraform Provider

# Idea: 
# 1. Running tests against the canary landscape


on:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 2'

env:
  PATH_TO_TFSCRIPT: 'regression-test'
  DEV_OVERRIDE: 'assets/provider-config-ghaction.txt'
  TEMP_PLAN_OUTPUT : 'plan-output.txt'

permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Check out Git repository
        id: checkout_repo
        uses: actions/checkout@v5
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'
          cache: false
      - run: go mod download
      - run: go mod tidy
      - run: go build -v .
      - name: Run linters
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          skip-cache: true

  test:
    name: Regression Test against Canary Tenant
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Check out Git repository
      id: checkout_repo
      uses: actions/checkout@v5

    - name: Setup Go
      uses: actions/setup-go@v5
      with:
        go-version-file: 'go.mod'
        cache: false

    - name: Setup Terraform
      id : setup_terraform
      uses: hashicorp/setup-terraform@v3.1.2
      with:
        terraform_wrapper: false
        terraform_version: latest

    - name: Install local Terraform provider
      id: build_provider
      shell: bash
      run: |
        go mod tidy && make install

    - name: Remove init data and place override
      id: set_to_override
      shell: bash
      run: |
        rm -rf .terraform && rm -rf .terraform.lock.hcl && cp ${{ env.DEV_OVERRIDE }} ~/.terraformrc

    - name: Update Terraform scripts before apply
      shell: bash
      run: |
        PROVIDER_FILE="${{ env.PATH_TO_TFSCRIPT }}/provider.tf"

        # Perform replacement in provider.tf
        sed -i 's|p12_certificate_content = filebase64(var.certificate_file_path)|#p12_certificate_content = filebase64(var.certificate_file_path)|g' "$PROVIDER_FILE"
        sed -i 's|p12_certificate_password = var.certificate_file_password|#p12_certificate_password = var.certificate_file_password|g' "$PROVIDER_FILE"

        # Show the updated files
        echo "Updated provider.tf:"
        cat "$PROVIDER_FILE"   

    - name: Terraform Apply with local provider
      id: terraform_apply_local
      shell: bash
      run: |
        export SCI_CLIENT_ID="${{ secrets.CANARY_CLIENT_ID }}"
        export SCI_CLIENT_SECRET="${{ secrets.CANARY_CLIENT_SECRET }}"

        terraform -chdir=${{ env.PATH_TO_TFSCRIPT }} apply \
        -var tenant_url="${{ secrets.CANARY_TENANT_URL }}" \
        -var certificate="${{ secrets.PEM_CERTIFICATE_STRING }}" \
        -auto-approve -no-color

    - name: Terraform Destroy with local provider
      if: always()
      id: terraform_destory
      shell: bash
      run: |
        export SCI_CLIENT_ID="${{ secrets.CANARY_CLIENT_ID }}"
        export SCI_CLIENT_SECRET="${{ secrets.CANARY_CLIENT_SECRET }}"

        terraform -chdir=${{ env.PATH_TO_TFSCRIPT }} destroy \
        -var tenant_url="${{ secrets.CANARY_TENANT_URL }}" \
        -var certificate="${{ secrets.PEM_CERTIFICATE_STRING }}" \
        -auto-approve -no-color